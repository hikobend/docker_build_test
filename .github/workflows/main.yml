name: deploy to Amazon ECR
on:
  pull_request:
  push:
    branches:
      - develop
#      - 'feature/**'

jobs:
  build:
    name: Build image
    env:
      SERVICE_NAME: sample-nginx
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     python-version: ["3.10"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: stg AWS OIDC credential
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::330698417199:role/oms-GithubActions-OIDC
        role-session-name: "OIDC credential"
        aws-region: ap-northeast-1


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: build abd push to ECR
      uses: docker/build-push-action@v2
      id: build-image
      with:
        push: true
        file: api/docker/rails/Dockerfile
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:latest
#        cache-from: type=local,src=/tmp/.buildx-cache
#        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

#    - name: Move cache
#      run: |
#        rm -rf /tmp/.buildx-cache
#        mv /tmp/.buildx-cache-new /tmp/.buildx-cache